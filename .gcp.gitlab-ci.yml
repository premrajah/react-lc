.gcp_deploy_template: &gcp_deploy
  script:
    - echo $GKE_ACCOUNT > /tmp/$CI_PIPELINE_DEPLOY.json
    - gcloud auth activate-service-account --key-file=/tmp/$CI_PIPELINE_DEPLOY.json
    - gcloud config set project ${GCP_PROJECT_ID}
    - gcloud config set container/cluster ${GKE_CLUSTER}
    - gcloud config set compute/region ${GKE_REGION}
    - gcloud container clusters get-credentials ${GKE_CLUSTER} --region ${GKE_REGION}

    - export IMAGE_TAG=$(cat aws_image_tag.txt)
    - echo $IMAGE_TAG

    - ls -latr ./scripts/k8s

    - sed -i.bak "s#\\\${API_IMAGE}#$IMAGE_TAG#" ./scripts/k8s/deployment.yaml
    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./scripts/k8s/deployment.yaml

    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./scripts/k8s/service.yaml

    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./scripts/k8s/ingress.yaml
    - sed -i.bak "s#\\\${INGRESS_SUFFIX}#$INGRESS_SUFFIX#" ./scripts/k8s/ingress.yaml
    - sed -i.bak "s#\\\${LPCY_PREFIX}#$LPCY_PREFIX#" ./scripts/k8s/ingress.yaml

    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./scripts/k8s/cronjob.yaml

    - export PATH=$PATH:.

    - kubectl get svc
    - kubectl config view

    - cat ./scripts/k8s/deployment.yaml
    - cat ./scripts/k8s/service.yaml
    - cat ./scripts/k8s/ingress.yaml
    - cat ./scripts/k8s/cronjob.yaml

    - kubectl apply -f ./scripts/k8s/deployment.yaml
    - kubectl apply -f ./scripts/k8s/service.yaml
    - kubectl apply -f ./scripts/k8s/ingress.yaml
    - kubectl apply -f ./scripts/k8s/cronjob.yaml

gcp_build_dev:
  stage: dev_build
  image: docker:git
  needs: []
  services:
    - docker:dind
  before_script:
    - echo $GCR_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - cat /tmp/$CI_PIPELINE_ID.json | docker login -u _json_key --password-stdin https://${GCR_DOMAIN}
  after_script:
    - rm /tmp/$CI_PIPELINE_ID.json
  script:
    - export ENVIRONMENT=${CI_COMMIT_REF_NAME//_}
    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./.env
    - export APP_NAME=loopcycyle/${CI_PROJECT_NAME}
    - export IMAGE_TAG=${GCR_DOMAIN}/${GCP_PROJECT_ID}/${APP_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_IID}
    - docker build -t ${APP_NAME} .
    - docker tag ${APP_NAME} ${IMAGE_TAG}
    - docker push ${IMAGE_TAG}
    - echo ${IMAGE_TAG} | tee gcp_image_tag.txt
  artifacts:
    paths:
      - gcp_image_tag.txt
  only:
    - develop
    - develop_refactor

gcp_deploy_dev:
  stage: dev_deploy
  needs: ['gcp_build_dev']
  dependencies: ['gcp_build_dev']
  image: kiwigrid/gcloud-kubectl-helm
  <<: *gcp_deploy
  before_script:
  - export ENVIRONMENT=${CI_COMMIT_REF_NAME//_}
  - export INGRESS_SUFFIX="-${ENVIRONMENT}"
  - export LPCY_PREFIX="d"
  only:
    - develop
    - develop_refactor
    - develop-api2

gcp_build_prod:
  stage: prod_build
  image: docker:git
  needs: []
  services:
    - docker:dind
  before_script:
    - echo $GCR_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - cat /tmp/$CI_PIPELINE_ID.json | docker login -u _json_key --password-stdin https://${GCR_DOMAIN}
  after_script:
    - rm /tmp/$CI_PIPELINE_ID.json
  script:
    - export ENVIRONMENT=${CI_COMMIT_REF_NAME//_}
    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./.env
    - export APP_NAME=loopcycyle/${CI_PROJECT_NAME}
    - export IMAGE_TAG=${GCR_DOMAIN}/${GCP_PROJECT_ID}/${APP_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_IID}
    - docker build -t ${APP_NAME} .
    - docker tag ${APP_NAME} ${IMAGE_TAG}
    - docker push ${IMAGE_TAG}
    - echo ${IMAGE_TAG} | tee gcp_image_tag.txt
  artifacts:
    paths:
      - gcp_image_tag.txt
  only:
    - master

gcp_deploy_prod:
  stage: prod_deploy
  needs: ['gcp_build_prod']
  dependencies: ['gcp_build_prod']
  image: kiwigrid/gcloud-kubectl-helm
  <<: *gcp_deploy
  before_script:
    - export ENVIRONMENT=${CI_COMMIT_REF_NAME//_}
    - export INGRESS_SUFFIX=""
    - export LPCY_PREFIX="u"
  only:
    - master
  when: manual

gcp_build_stage:
  stage: stage_build
  image: docker:git
  needs: []
  services:
    - docker:dind
  before_script:
    - echo $GCR_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - cat /tmp/$CI_PIPELINE_ID.json | docker login -u _json_key --password-stdin https://${GCR_DOMAIN}
  after_script:
    - rm /tmp/$CI_PIPELINE_ID.json
  script:
    - export ENVIRONMENT=stage
    - sed -i.bak "s#\\\${ENVIRONMENT}#$ENVIRONMENT#" ./.env
    - export APP_NAME=loopcycyle/${CI_PROJECT_NAME}
    - export IMAGE_TAG=${GCR_DOMAIN}/${GCP_PROJECT_ID}/${APP_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_IID}
    - docker build -t ${APP_NAME} .
    - docker tag ${APP_NAME} ${IMAGE_TAG}
    - docker push ${IMAGE_TAG}
    - echo ${IMAGE_TAG} | tee gcp_image_tag.txt
  artifacts:
    paths:
      - gcp_image_tag.txt
  only:
    - master

gcp_deploy_stage:
  stage: stage_deploy
  needs: ['gcp_build_stage']
  dependencies: ['gcp_build_stage']
  image: kiwigrid/gcloud-kubectl-helm
  <<: *gcp_deploy
  before_script:
    - export ENVIRONMENT=stage
    - export INGRESS_SUFFIX="-${ENVIRONMENT}"
    - export LPCY_PREFIX="s"
  only:
    - master


